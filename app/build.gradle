apply plugin: 'com.android.model.application'

def prebuild_path = file(project(':nativecommon/prebuild').projectDir).absolutePath

// stlport configuration ["c++_static", "c++_shared", "gnustl_static", "gnustl_shared"]
def stlportType = "c++"
def stllinkType = "static"

model {
    repositories {
        libs(PrebuiltLibraries) {
            libu_static {
                headers.srcDir "${prebuild_path}/libu/include"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("${prebuild_path}/libu/lib/libu.a")
                }
            }

            libu {
                headers.srcDir "${prebuild_path}/libu/include"
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${prebuild_path}/libu/lib/libu.so")
                }
            }
        }
    }
    android {
        compileSdkVersion=23
        buildToolsVersion="23.0.1"

        defaultConfig.with {
            applicationId="com.zhuxy.android.nativeapp"
            minSdkVersion.apiLevel = 11
            targetSdkVersion.apiLevel = 23
        }
    }
    android.sources {
        main {
            jni {
                dependencies {
                    library "libu" linkage "shared"
                    //library "libu_static" linkage "static"
                    project ":nativecommon/cpufeatures" linkage "static"
                    project ":nativecommon/native_app_glue" linkage "static"
                }
                source {
                    srcDir 'src/main/jni'
                    srcDir '../nativecommon/ndk_helper'
                    srcDir '../nativecommon/jui_helper'
                }
            }

            jniLibs {
                dependencies {
                    library "libu"
                }
            }
        }
    }
    android.ndk {
        platformVersion = 11
        moduleName = "nativeapp"
        stl = "${stlportType}_${stllinkType}"
        ldLibs.addAll(["atomic", "log", "android", "EGL", "GLESv2", "z"])
        abiFilters.addAll(["armeabi"])
        cppFlags.addAll(["-std=c++11",
                         "-I${file("../nativecommon/ndk_helper")}".toString(),
                         "-I${file("../nativecommon/jui_helper")}".toString() ])
    }
    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.pro'))
        }
    }
    android.abis {
        create("armeabi-v7a") {
            cppFlags.addAll(["-mhard-float", "-D_NDK_MATH_NO_SOFTFP=1", "-mfloat-abi=hard"])
            ldLibs.add("m_hard")
            ldFlags.add("-Wl,--no-warn-mismatch")
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.+'
    compile project(':nativecommon/jui_java')
}
